<!-- Stepper -->
<div class="flex items-center justify-center mb-8">
    <div class="flex items-center gap-4">
        <div class="flex items-center space-x-2 step" data-step="1">
            <div class="w-8 h-8 flex items-center justify-center rounded-full bg-yellow-500 text-white font-bold">1
            </div>
            <span class="font-medium text-yellow-600">Address</span>
        </div>

        <!-- Connecting line -->
        <div class="w-16 h-0.5 bg-yellow-300"></div>

        <div class="flex items-center space-x-2 step" data-step="2">
            <div class="w-8 h-8 flex items-center justify-center rounded-full bg-yellow-500 text-white font-bold">2
            </div>
            <span class="text-yellow-600">Payment</span>
        </div>
    </div>
</div>

<div class="max-w-6xl mx-auto grid grid-cols-1 lg:grid-cols-2 gap-8">
    <!-- Left Column - Summary -->
    <div class="bg-white rounded-lg shadow-sm p-6">
        <h2 class="text-xl font-semibold mb-6">Summary</h2>

        <!-- Product Items -->
        <div class="space-y-4 mb-6">
            <% cart.items.forEach(item=> { %>
                <div class="flex items-center justify-between border-b pb-4">
                    <div class="flex items-center gap-4">
                        <img src="/uploads/<%= item.image %>" alt="Product" class="w-16 h-16 rounded object-cover">
                        <div>
                            <h3 class="font-medium text-sm">
                                <%= item.name %>
                            </h3>

                            <!-- Show variant details -->
                            <% if (item.variantId && item.size!=='Nil' ) { %>
                                <p class="text-gray-500 text-sm mt-1">
                                    Size: <%= item.size %>
                                </p>
                                <% } %>

                                    <p class="text-gray-600 text-sm mt-1">Quantity: x<%= item.quantity %>
                                    </p>
                        </div>
                    </div>
                    <p class="font-semibold text-yellow-500">
                        ₹<%= item.subtotal %>
                    </p>
                </div>
                <% }) %>
        </div>


        <!-- Coupon Code -->
        <div class="mb-6">
            <label class="block text-sm font-medium mb-2">Coupon code / Promo code</label>
            <div class="flex gap-2">
                <input id="couponInput" type="text" placeholder="Enter coupon code"
                    class="flex-1 border border-gray-300 rounded px-4 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-yellow-500">
                <button id="applyCouponBtn"
                    class="bg-white border border-gray-300 px-6 py-2 rounded text-sm font-medium hover:bg-gray-50">
                    Apply
                </button>
            </div>
        </div>

        <!-- Available Coupons -->
        <div class="mb-6">
            <label class="block text-sm font-medium mb-2">Available Coupons</label>
            <% if (coupons && coupons.length> 0) { %>
                <div class="space-y-3">
                    <% coupons.forEach(coupon=> { %>
                        <div
                            class="border rounded-lg p-3 flex justify-between items-center bg-gray-50 hover:bg-yellow-50 transition">
                            <div>
                                <p class="font-semibold text-yellow-600">
                                    <%= coupon.code %>
                                </p>
                                <p class="text-sm text-gray-600">Min Purchase: ₹<%= coupon.minPurchase %>
                                </p>
                                <p class="text-sm text-gray-600">Discount: ₹<%= coupon.discountValue %></p>
                                <p class="text-xs text-gray-400">Valid until <%= new
                                        Date(coupon.validUntil).toLocaleDateString() %>
                                </p>
                            </div>
                            <button
                                class="bg-yellow-400 px-4 py-2 rounded text-white text-sm font-medium hover:bg-yellow-500 apply-coupon-btn"
                                data-code="<%= coupon.code %>">
                                Apply
                            </button>
                        </div>
                        <% }) %>
                </div>
                <% } else { %>
                    <p class="text-sm text-gray-500">No coupons available for your order.</p>
                    <% } %>
        </div>

        <!-- Shipping Address -->
        <div class="mb-6">
            <label class="block text-sm font-medium mb-2">Shipping Address</label>
            <p class="text-sm text-gray-600 bg-gray-50 p-3 rounded">
                <%= address ? address.name + ', ' + address.address : 'No default address set' %>

            </p>
        </div>

        <!-- Business Address -->
        <div class="mb-6">
            <label class="block text-sm font-medium mb-2">Business Address</label>
            <p class="text-sm text-gray-600">Same as Shipping</p>
        </div>

        <!-- Price Summary -->
        <div class="border-t pt-4 space-y-3">
            <div class="flex justify-between text-sm">
                <span class="text-gray-600">Subtotal (<%= cart.items.reduce((sum, item)=> sum + item.quantity, 0) %>
                        items)</span>
                <span class="font-medium">₹<%= subtotal.toFixed(2) %></span>
            </div>

            <div class="flex justify-between text-sm">
                <span class="text-gray-600">Delivery Charge</span>
                <span class="font-medium">₹<%= deliveryCharge.toFixed(2) %></span>
            </div>
            <div class="flex justify-between text-sm">
                <span class="text-gray-600">Coupon Applied</span>
                <span id="discountAmount" class="font-medium text-green-600">-₹0.00</span>
            </div>
            <div class="flex justify-between text-lg font-semibold border-t pt-3">
                <span>Total</span>
                <span id="totalPrice">₹<%= total.toFixed(2) %></span>
            </div>
        </div>
    </div>
    <form action="/success" method="POST" id="paymentForm" class="bg-white rounded-lg shadow-sm p-6">

        <input type="hidden" name="paymentMethod" id="paymentMethod" />
        <input type="hidden" name="totalAmount" value="<%= total %>" />
        <input type="hidden" name="addressId" value="<%= address._id %>" />

        <!-- Right Column - Payment Method Selection -->
        <div class="bg-white rounded-lg shadow-sm p-6">
            <h2 class="text-xl font-semibold mb-6">Payment Method</h2>
            <p class="text-sm text-gray-600 mb-6">Please select your preferred payment method</p>

            <!-- Payment Method Options -->
            <div class="space-y-4">
                <!-- Online Payment -->
                <button type="button" id="onlinePayment" onclick="selectPayment('online')"
                    class="payment-option w-full border-2 border-gray-300 rounded-lg p-6  text-left transition-all duration-200">
                    <div class="flex items-start gap-4">
                        <div class="flex-shrink-0 mt-1">
                            <div class="w-5 h-5 rounded-full border-2 border-gray-300 flex items-center justify-center">
                                <div class="w-3 h-3 rounded-full bg-gray-400  hidden radio-dot"></div>
                            </div>
                        </div>
                        <div class="flex-1">
                            <div class="flex items-center gap-3 mb-2">
                                <svg class="w-6 h-6 text-gray-700" fill="none" stroke="currentColor"
                                    viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                                </svg>
                                <h3 class="font-semibold text-lg">Online Payment</h3>
                            </div>
                            <p class="text-sm text-gray-600">Pay securely using Credit/Debit Card, Net Banking, or UPI
                            </p>
                        </div>
                    </div>
                </button>

                <!-- Cash on Delivery -->
                <button type="button" id="codPayment" onclick="selectPayment('cod')"
                    class="payment-option w-full border-2 border-gray-300 rounded-lg p-6 text-left hover:border-yellow-400 hover:bg-yellow-50 transition-all duration-200">
                    <div class="flex items-start gap-4">
                        <div class="flex-shrink-0 mt-1">
                            <div class="w-5 h-5 rounded-full border-2 border-gray-300 flex items-center justify-center">
                                <div class="w-3 h-3 rounded-full bg-yellow-400 hidden radio-dot"></div>
                            </div>
                        </div>
                        <div class="flex-1">
                            <div class="flex items-center gap-3 mb-2">
                                <svg class="w-6 h-6 text-gray-700" fill="none" stroke="currentColor"
                                    viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z" />
                                </svg>
                                <h3 class="font-semibold text-lg">Cash on Delivery</h3>
                            </div>
                            <p class="text-sm text-gray-600">Pay with cash when your order is delivered</p>
                        </div>
                    </div>
                </button>

                <!-- Wallet -->
                <button type="button" id="walletPayment" onclick="selectPayment('wallet')"
                    class="payment-option w-full border-2 border-gray-300 rounded-lg p-6 text-left transition-all duration-200">
                    <div class="flex items-start gap-4">
                        <div class="flex-shrink-0 mt-1">
                            <div class="w-5 h-5 rounded-full border-2 border-gray-300 flex items-center justify-center">
                                <div class="w-3 h-3 rounded-full bg-yellow-400 hidden radio-dot"></div>
                            </div>
                        </div>
                        <div class="flex-1">
                            <div class="flex items-center gap-3 mb-2">
                                <svg class="w-6 h-6 text-gray-700" fill="none" stroke="currentColor"
                                    viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
                                </svg>
                                <h3 class="font-semibold text-lg"> Wallet</h3>
                            </div>
                            <p class="text-sm text-gray-600">Pay using wallet</p>
                            <p class="text-yellow   -600 text-sm mt-1">Available Balance: ₹<%= walletBalance.toFixed(2) %>
                            </p>
                        </div>
                    </div>

                </button>
            </div>

            <!-- Order Total Display -->
            <div class="mt-8 bg-gray-50 rounded-lg p-4">
                <div class="flex justify-between items-center">
                    <span class="text-gray-600">Total Amount</span>
                    <span id="totalAmount" class="text-2xl font-bold">₹<%= total.toFixed(2) %></span>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="flex gap-4 mt-8">
                <button type="button" onclick="window.history.back()"
                    class="flex-1 border border-gray-300 py-3 rounded-lg font-medium hover:bg-gray-50 transition-colors">
                    BACK
                </button>
                <button id="proceedBtn" type="button"
                    class="flex-1 bg-yellow-400 py-3 rounded-lg font-medium hover:bg-yellow-500 transition-colors disabled:bg-gray-300 disabled:cursor-not-allowed"
                    disabled>
                    PROCEED TO PAY
                </button>
            </div>
        </div>
</div>
</form>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    let selectedMethod = null;

    function selectPayment(method) {
        selectedMethod = method;
        document.querySelectorAll('.payment-option').forEach(option => {
            option.classList.remove('border-yellow-400', 'bg-yellow-50');
            option.classList.add('border-gray-300');
            option.querySelector('.radio-dot').classList.add('hidden');
        });

        const selectedOption = document.getElementById(method + 'Payment');
        selectedOption.classList.remove('border-gray-300');
        selectedOption.classList.add('border-yellow-400', 'bg-yellow-50');
        selectedOption.querySelector('.radio-dot').classList.remove('hidden');

        document.getElementById('proceedBtn').disabled = false;
        document.getElementById('proceedBtn').textContent = 'PLACE ORDER';
    }

    document.getElementById('proceedBtn').addEventListener('click', async function () {
        if (!selectedMethod) {
            alert("Please select a payment method");
            return;
        }

        const method = selectedMethod.toLowerCase();
        const totalAmount = parseFloat(document.querySelector('input[name="totalAmount"]').value);
        const addressId = '<%= address._id %>';
        const couponCode = appliedCoupon || null; // Get coupon if applied

        // -----------------------------
        // CASH ON DELIVERY
        // -----------------------------
        if (method === 'cod') {
            document.getElementById('paymentMethod').value = 'cod';

            // Add couponCode hidden input if applied
            if (couponCode) {
                document.querySelector('input[name="couponCode"]')?.remove();
                const couponInput = document.createElement('input');
                couponInput.type = 'hidden';
                couponInput.name = 'couponCode';
                couponInput.value = couponCode;
                document.getElementById('paymentForm').appendChild(couponInput);
            }

            document.getElementById('paymentForm').submit();
            return;
        }

        // -----------------------------
        // WALLET PAYMENT
        // -----------------------------
        if (method === 'wallet') {
            const res = await fetch('/success', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ paymentMethod: method, totalAmount, addressId, couponCode })
            });

            const data = await res.json();
            if (data.success) {
                alert('Payment done using wallet!');
                window.location.href = data.redirect;
            } else {
                alert(data.message);
            }
            return;
        }

        // -----------------------------
        // ONLINE PAYMENT (Razorpay)
        // -----------------------------
        try {
            const res = await fetch('/success', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ paymentMethod: method, totalAmount, addressId, couponCode })
            });
            const data = await res.json();

            if (!data.success) {
                alert("Error creating order. Please try again.");
                return;
            }

            const options = {
                key: data.key,
                amount: data.razorpayOrder.amount,
                currency: data.razorpayOrder.currency,
                name: "Pawsome",
                description: "Order Payment",
                order_id: data.razorpayOrder.id,
                handler: async function (response) {
                    const verifyRes = await fetch('/verify-payment', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            razorpay_payment_id: response.razorpay_payment_id,
                            razorpay_order_id: response.razorpay_order_id,
                            razorpay_signature: response.razorpay_signature,
                            orderId: data.orderId,
                            couponCode // Include coupon in verification
                        })
                    });
                    const verifyData = await verifyRes.json();
                    alert(verifyData.message);
                    if (verifyData.success) {
                        window.location.href = '/orders';
                    }
                },
                prefill: {
                    name: "<%= user.name %>",
                    email: "<%= user.email %>"
                },
                theme: { color: "#FBBF24" }
            };

            const rzp = new Razorpay(options);
            rzp.open();
        } catch (err) {
            console.error(err);
            alert("Something went wrong with payment. Please try again.");
        }
    });
    const subtotal = parseFloat('<%= subtotal %>');
    const deliveryCharge = parseFloat('<%= deliveryCharge %>');

    let appliedDiscount = 0;
    let appliedCoupon = null;

    // Apply from input field
    document.getElementById('applyCouponBtn').addEventListener('click', async () => {
        const code = document.getElementById('couponInput').value.trim();
        if (!code) return alert('Please enter a coupon code');

        applyCoupon(code);
    });

    // Apply from Available Coupon Buttons
    document.querySelectorAll('.apply-coupon-btn').forEach(btn => {
        btn.addEventListener('click', () => {
            const code = btn.dataset.code;
            applyCoupon(code);
        });
    });

    async function applyCoupon(code) {
        try {
            const res = await fetch('/apply-coupon', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ code, subtotal })
            });

            const data = await res.json();

            if (!data.success) {
                alert(data.message);
                return;
            }

            // Coupon applied successfully
            appliedCoupon = code;
            appliedDiscount = data.discount;

            // Update UI
            document.getElementById('discountAmount').textContent = `-₹${appliedDiscount.toFixed(2)}`;
            const newTotal = subtotal + deliveryCharge - appliedDiscount;
            document.getElementById('totalAmount').textContent = `₹${newTotal.toFixed(2)}`;
            document.getElementById('totalPrice').textContent = `₹${newTotal.toFixed(2)}`

            // Update hidden input so it goes to backend
            document.querySelector('input[name="totalAmount"]').value = newTotal;
            document.querySelector('input[name="couponCode"]')?.remove();
            const couponInput = document.createElement('input');
            couponInput.type = 'hidden';
            couponInput.name = 'couponCode';
            couponInput.value = appliedCoupon;
            document.getElementById('paymentForm').appendChild(couponInput);

            alert(`Coupon ${code} applied successfully!`);
        } catch (err) {
            console.error(err);
            alert('Error applying coupon');
        }
    }


</script>